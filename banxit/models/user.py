# coding: utf-8

from __future__ import absolute_import

import uuid

from banxit.app.extensions import db
from banxit import util
from banxit.models.swagger_model_ import SwaggerModel


class User(db.Model, SwaggerModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    __tablename__ = 'users'
    uid = db.Column('uid', db.String(255), default=lambda: uuid.uuid4().hex,  primary_key=True)
    email = db.Column('email', db.String(255), unique=True)
    firstname = db.Column('firstname', db.String(255))
    lastname = db.Column('lastname', db.String(255))
    password = db.Column('password', db.String(255), nullable=False)

    swagger_types = {
        'uid': str,
        'firstname': str,
        'lastname': str,
        'email': str,
        'password': str
    }

    attribute_map = {
        'uid': 'uid',
        'firstname': 'firstname',
        'lastname': 'lastname',
        'email': 'email',
        'password': 'password'
    }

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    def __repr__(self):
        return '<User %r>' % (self.uid)
