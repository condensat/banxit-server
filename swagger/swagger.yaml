---
swagger: "2.0"
info:
  description: "This is an example of using OAuth2 Application Flow in a specification\
    \ to describe security to your API."
  version: "1.0.2-RC1"
  title: "Sample Application Flow OAuth2 Project"
host: "virtserver.swaggerhub.com"
basePath: "/condensat/banxit/1.0.0"
schemes:
- "http"
security:
- banxit_auth:
  - "read"
  - "write"
paths:
  /ping:
    get:
      summary: "Server heartbeat operation"
      description: "This operation shows how to override the global security defined\
        \ above, as we want to open it up for all users."
      operationId: "ping_get"
      parameters: []
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user:
    post:
      tags:
      - "user"
      summary: "Creates a user"
      description: "This operation creates a user with a valid json form supplied"
      operationId: "user_post"
      parameters:
      - in: "body"
        name: "user"
        description: "user informations"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: "Created"
        429:
          description: "Too many requests"
      security: []
      x-swagger-router-controller: "banxit.controllers.user_controller"
  /user/login:
    get:
      summary: "log a user in"
      description: "this operation logs a user in with apropriate openid/oauth2 credentials"
      operationId: "user_login_get"
      parameters: []
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/logout:
    get:
      summary: "log a user out"
      description: "this operation logs a user out"
      operationId: "user_id_logout_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}:
    get:
      summary: "retrieve user informations"
      description: "retrieve user informations"
      operationId: "user_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    put:
      summary: "update user informations"
      description: "update user informations with a valid json form supplied"
      operationId: "user_id_put"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    delete:
      summary: "delete a user"
      description: "delete a user"
      operationId: "user_id_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/account:
    get:
      summary: "retrieve account accounts information"
      description: "This operation retrieve the account accounts information of the\
        \ user."
      operationId: "user_id_account_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create an account account"
      description: "This operation creates a account account with supplied valid information"
      operationId: "user_id_account_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    put:
      summary: "update a account account"
      description: "This operation update a account account."
      operationId: "user_id_account_put"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    delete:
      summary: "delete a account account"
      description: "This operation delete a account account."
      operationId: "user_id_account_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/txs:
    get:
      summary: "retrieve account account information"
      description: "This operation retrieve the account account information of the\
        \ user."
      operationId: "user_id_txs_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create a transaction"
      description: "This operation creat a transaction."
      operationId: "user_id_txs_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/txs/{txid}/:
    get:
      summary: "retrieve account account information"
      description: "This operation retrieve the account account information of the\
        \ user."
      operationId: "user_id_txs_txid_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      - name: "txid"
        in: "path"
        description: "identifier of the transaction"
        required: true
        type: "integer"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /users/{id}/card:
    get:
      summary: "retrieve card accounts information"
      description: "This operation retrieve the card accounts information of the user."
      operationId: "users_id_card_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create an card account"
      description: "This operation creates a card account with supplied valid information"
      operationId: "users_id_card_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    put:
      summary: "update a card account"
      description: "This operation update a card account."
      operationId: "users_id_card_put"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    delete:
      summary: "delete a card account"
      description: "This operation delete a card account."
      operationId: "users_id_card_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/card/txs:
    get:
      summary: "retrieve card account information"
      description: "This operation retrieve the card account information of the user."
      operationId: "user_id_card_txs_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create a transaction"
      description: "This operation creat a transaction."
      operationId: "user_id_card_txs_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/card/txs/{txid}:
    get:
      summary: "retrieve card account information"
      description: "This operation retrieve the card account information of the user."
      operationId: "user_id_card_txs_txid_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      - name: "txid"
        in: "path"
        description: "identifier of the transaction"
        required: true
        type: "integer"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/crypto:
    get:
      summary: "retrieve crypto account information"
      description: "This operation retrieve the crypto account information of the\
        \ user."
      operationId: "user_id_crypto_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create an crypto account"
      description: "This operation creates a crypto account with supplied valid information"
      operationId: "user_id_crypto_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    put:
      summary: "update a crypto account"
      description: "This operation update a crypto account."
      operationId: "user_id_crypto_put"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    delete:
      summary: "delete a crypto account"
      description: "This operation delete a crypto account."
      operationId: "user_id_crypto_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/crypto/txs:
    get:
      summary: "retrieve crypto account information"
      description: "This operation retrieve the crypto account information of the\
        \ user."
      operationId: "user_id_crypto_txs_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
    post:
      summary: "create a transaction"
      description: "This operation creat a transaction."
      operationId: "user_id_crypto_txs_post"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
  /user/{id}/crypto/txs/{txid}:
    get:
      summary: "retrieve crypto account information"
      description: "This operation retrieve the crypto account information of the\
        \ user."
      operationId: "user_id_crypto_txs_txid_get"
      parameters:
      - name: "id"
        in: "path"
        description: "Name of the user to get"
        required: true
        type: "string"
      - name: "txid"
        in: "path"
        description: "identifier of the transaction"
        required: true
        type: "integer"
      responses:
        200:
          description: "OK"
      security: []
      x-swagger-router-controller: "banxit.controllers.default_controller"
securityDefinitions:
  banxit_auth:
    type: "oauth2"
    authorizationUrl: "http://swagger.io/api/oauth/dialog"
    flow: "implicit"
    scopes:
      write: "modify pets in your account"
      read: "read your pets"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      email:
        type: "string"
    example:
      firstname: "firstname"
      id: 0
      email: "email"
      username: "username"
      lastname: "lastname"
  account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      iso13616:
        type: "string"
  accounttx:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
  Card:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      isoiec7812:
        type: "string"
  Cardtx:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
  Crypto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      address:
        type: "string"
  Cryptotx:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
